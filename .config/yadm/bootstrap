#!/usr/bin/env python3
import os
import stat
from pathlib import Path
from subprocess import run

import requests

HOME = Path.home()
NVIM_URL = ('https://github.com/neovim/neovim/releases/download/nightly/'
            'nvim.appimage')
NVIM_INSTALL = f'{HOME}/.local/bin/nvim'
APT_PACKAGES = f'{HOME}/.scripts/apt_packages.list'
DEB_PACKAGES = f'{HOME}/.scripts/deb_pacakges.list'
PYPI_PACKAGES = f'{HOME}/.scripts/pypi_packages.list'


def download_file(url, destination):
    print(f'Downloading {url} to {destination}')
    request = requests.get(url)
    with open(destination, 'wb') as f:
        f.write(request.content)


def extract_filename_from_url(url):
    return url[url.rfind('/') + 1:]


def make_executable(file_name):
    os.chmod(file_name, os.stat(file_name).st_mode | stat.S_IEXEC)


def install_nvim_if_not_installed():
    if Path(NVIM_INSTALL).is_file():
        return
    print('Installing nvim.')
    download_file(NVIM_URL, NVIM_INSTALL)
    make_executable(NVIM_INSTALL)


def apt_install_packages():
    print('Installing packages.')
    run(['xargs', '-a', APT_PACKAGES, 'sudo', 'apt-get', 'install'], check=True)


def dpkg_install_packages():
    print('Downlading and installing .deb packages.')

    with open(DEB_PACKAGES, 'r') as list_file:
        package_list = list_file.read().splitlines()

    for package_url in package_list:
        filename = extract_filename_from_url(package_url)
        path = f'/tmp/{filename}'
        download_file(package_url, path)
        run(['dpkg', '-i', path], check=True)


def pip3_install_packages():
    print('Installing Python packages.')
    run(['pip3', 'install', '-r', PYPI_PACKAGES], check=True)


def main():
    install_nvim_if_not_installed()
    apt_install_packages()
    pip3_install_packages()
    dpkg_install_packages()


if __name__ == '__main__':
    main()
